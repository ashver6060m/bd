from pyspark.sql import SparkSession
import pandas as pd
from sklearn.linear_model import LinearRegression

spark = SparkSession.builder.appName("SklearnWithPySpark").getOrCreate()

data = [
    (1000, 200000),
    (1500, 250000),
    (2000, 300000),
    (2500, 350000),
    (3000, 400000)
]
df_spark = spark.createDataFrame(data, ["size", "price"])

df_pandas = df_spark.toPandas()

X = df_pandas[["size"]]   # input feature
y = df_pandas["price"]    # target value

model = LinearRegression()
model.fit(X, y)

print("Coefficient:", model.coef_[0])
print("Intercept:", model.intercept_)

new_sizes = pd.DataFrame({"size": [1800, 2200]})
predictions = model.predict(new_sizes)

print(" Predictions:")
for size, price in zip(new_sizes["size"], predictions):
    print(f"Size: {size}, Predicted Price: {round(price)}")
