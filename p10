from pyspark.sql import SparkSession
from pyspark.ml.regression import LinearRegression
from pyspark.ml.feature import VectorAssembler

spark = SparkSession.builder.appName("LinearRegressionExample").getOrCreate()

data = [
    (1000, 200000),
    (1500, 250000),
    (2000, 300000),
    (2500, 350000),
    (3000, 400000)
]
df = spark.createDataFrame(data, ["size", "price"])

assembler = VectorAssembler(inputCols=["size"], outputCol="features")
df_vector = assembler.transform(df).select("features", "price")

lr = LinearRegression(featuresCol="features", labelCol="price")
model = lr.fit(df_vector)

print(" Coefficient:", model.coefficients)
print(" Intercept:", model.intercept)

new_data = spark.createDataFrame([(1800,), (2200,)], ["size"])
new_data_vector = assembler.transform(new_data)
predictions = model.transform(new_data_vector)

print(" Predictions:")
predictions.select("size", "prediction").show()
